import numpy as np

class FeedForwardNN:
    def __init__(self, input_size, hidden_size, output_size):
        # Initialize weights
        self.weights_input_hidden = np.random.rand(input_size, hidden_size)
        self.weights_hidden_output = np.random.rand(hidden_size, output_size)

    def sigmoid(self, x):
        return 1 / (1 + np.exp(-x))

    def forward(self, x):
        # Forward pass
        self.hidden_layer = self.sigmoid(np.dot(x, self.weights_input_hidden))
        self.output_layer = self.sigmoid(np.dot(self.hidden_layer, self.weights_hidden_output))
        return self.output_layer

# Example usage
if __name__ == "__main__":
    nn = FeedForwardNN(input_size=3, hidden_size=5, output_size=2)
    input_data = np.array([0.1, 0.2, 0.3])
    output = nn.forward(input_data)
    print("Output of the neural network:", output)
