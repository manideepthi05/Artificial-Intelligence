def minimax(board, depth, is_maximizing):
    if check_winner(board, 'X'):
        return -1  # X wins
    elif check_winner(board, 'O'):
        return 1  # O wins
    elif is_board_full(board):
        return 0  # Draw

    if is_maximizing:
        best_score = float('-inf')
        for move in get_available_moves(board):
            board[move] = 'O'  # O's turn
            score = minimax(board, depth + 1, False)
            board[move] = ''  # Undo move
            best_score = max(score, best_score)
        return best_score
    else:
        best_score = float('inf')
        for move in get_available_moves(board):
            board[move] = 'X'  # X's turn
            score = minimax(board, depth + 1, True)
            board[move] = ''  # Undo move
            best_score = min(score, best_score)
        return best_score

# Example usage
# board = ['X', 'O', 'X', '', 'O', '', '', '', '']
# best_move = minimax(board, 0, True)
